# Generated by Django 4.0.7 on 2023-09-07 08:48

import dataset_api.file_paths
import datetime
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import encrypted_json_fields.fields
import uuid


class Migration(migrations.Migration):

    replaces = [('dataset_api', '0001_initial'), ('dataset_api', '0002_rename_name_dataset_title'), ('dataset_api', '0003_organization_dataset_license_dataset_geography_and_more'), ('dataset_api', '0004_resource_format_alter_organization_contact_email_and_more'), ('dataset_api', '0005_dataset_access_type_dataset_action_dataset_funnel_and_more'), ('dataset_api', '0006_dataset_remark_dataset_status'), ('dataset_api', '0007_tag'), ('dataset_api', '0008_dataset_tags'), ('dataset_api', '0009_dataset_period_from_dataset_period_to_and_more'), ('dataset_api', '0010_resource_status'), ('dataset_api', '0011_resourceschema'), ('dataset_api', '0012_rename_value_resourceschema_format'), ('dataset_api', '0013_geography'), ('dataset_api', '0014_remove_dataset_geography_dataset_geography_and_more'), ('dataset_api', '0015_remove_tag_organization'), ('dataset_api', '0016_resource_masked_fields'), ('dataset_api', '0017_apisource_apiresource'), ('dataset_api', '0018_apiresource'), ('dataset_api', '0019_datasetratings'), ('dataset_api', '0020_sector_alter_dataset_geography'), ('dataset_api', '0021_remove_dataset_sector_dataset_sector'), ('dataset_api', '0022_remove_datasetratings_coverage_and_more'), ('dataset_api', '0023_additionalinfo'), ('dataset_api', '0024_datarequest'), ('dataset_api', '0025_datarequest_file_datarequest_purpose'), ('dataset_api', '0026_alter_datarequest_file'), ('dataset_api', '0027_datarequest_api_resource'), ('dataset_api', '0028_resourceschema_array_field_resourceschema_parent'), ('dataset_api', '0029_datarequest_creation_date_datarequest_reject_reason_and_more'), ('dataset_api', '0030_datarequest_user'), ('dataset_api', '0031_filedetails_remove_resource_file_and_more'), ('dataset_api', '0032_remove_apiresource_response_type_apidetails_url_path'), ('dataset_api', '0033_filedetails_remote_url'), ('dataset_api', '0034_license_dataaccessmodel'), ('dataset_api', '0035_moderationrequest'), ('dataset_api', '0036_alter_dataaccessmodel_contract_url_and_more'), ('dataset_api', '0037_rename_dam_id_dataaccessmodelrequest_data_access_model_id'), ('dataset_api', '0038_alter_dataaccessmodelrequest_remark'), ('dataset_api', '0039_remove_datarequest_api_resource_and_more'), ('dataset_api', '0040_remove_dataset_license_remove_dataset_access_type'), ('dataset_api', '0041_alter_organization_title'), ('dataset_api', '0042_datasetratings_status'), ('dataset_api', '0043_remove_dataaccessmodel_dataset_and_more'), ('dataset_api', '0044_organization_logo_alter_dataset_remote_issued'), ('dataset_api', '0045_alter_datasetratings_status'), ('dataset_api', '0046_remove_license_organization_and_more'), ('dataset_api', '0047_alter_dataaccessmodel_license'), ('dataset_api', '0048_delete_apiresource'), ('dataset_api', '0049_dataaccessmodel_license_additions_alter_license_file'), ('dataset_api', '0050_remove_dataaccessmodel_contract_url'), ('dataset_api', '0051_dataaccessmodel_subscription_model'), ('dataset_api', '0052_rename_quota_limit_dataaccessmodel_subscription_quota_and_more'), ('dataset_api', '0053_alter_license_description'), ('dataset_api', '0054_remove_dataaccessmodelrequest_data_access_model_id_and_more'), ('dataset_api', '0055_alter_dataaccessmodelrequest_access_model'), ('dataset_api', '0056_license_reject_reason'), ('dataset_api', '0057_datasetaccessmodelmap_issued_and_more'), ('dataset_api', '0058_datasetratings_user'), ('dataset_api', '0059_rename_datasetaccessmodelmap_datasetaccessmodel_and_more'), ('dataset_api', '0060_alter_apisource_api_version_alter_apisource_auth_loc_and_more'), ('dataset_api', '0061_organizationrequest'), ('dataset_api', '0062_organizationcreaterequest_and_more'), ('dataset_api', '0063_organizationrequest_status'), ('dataset_api', '0064_remove_dataset_remark'), ('dataset_api', '0065_alter_datarequest_file_and_more'), ('dataset_api', '0066_moderationrequest_request_type'), ('dataset_api', '0067_rename_moderationrequest_datasetreviewrequest_and_more'), ('dataset_api', '0068_datasetratings_issued_datasetratings_modified'), ('dataset_api', '0069_dataset_highlights_alter_dataset_dataset_type'), ('dataset_api', '0070_alter_resourceschema_parent'), ('dataset_api', '0071_alter_resourceschema_unique_together'), ('dataset_api', '0072_alter_resourceschema_unique_together_and_more'), ('dataset_api', '0073_alter_resourceschema_array_field_and_more'), ('dataset_api', '0074_sector_description_sector_highlights_and_more'), ('dataset_api', '0075_dataset_download_count'), ('dataset_api', '0076_datasetaccessmodelrequest_user_email'), ('dataset_api', '0077_agreement_user_email'), ('dataset_api', '0078_alter_filedetails_file_alter_license_description'), ('dataset_api', '0079_alter_dataset_remote_modified'), ('dataset_api', '0080_dataaccessmodel_validation_and_more'), ('dataset_api', '0081_licenseaddition_reject_reason_licenseaddition_status'), ('dataset_api', '0082_dataaccessmodel_status_alter_datarequest_user'), ('dataset_api', '0083_alter_datarequest_user_alter_licenseaddition_status'), ('dataset_api', '0084_alter_dataaccessmodel_validation_unit'), ('dataset_api', '0085_alter_dataaccessmodel_contract'), ('dataset_api', '0086_dataset_confirms_to_dataset_contact_point_and_more'), ('dataset_api', '0087_alter_filedetails_format'), ('dataset_api', '0088_dataset_accepted_agreement'), ('dataset_api', '0089_alter_licenseaddition_status'), ('dataset_api', '0090_alter_geography'), ('dataset_api', '0091_apiparameter'), ('dataset_api', '0092_datarequestparameter'), ('dataset_api', '0093_apiparameter_description_alter_apiparameter_default'), ('dataset_api', '0094_apisource_organization'), ('dataset_api', '0095_datarequest_default'), ('dataset_api', '0096_alter_datarequest_default_subscribe'), ('dataset_api', '0097_resourceschema_display_name'), ('dataset_api', '0098_organizationcreaterequest_username_and_more'), ('dataset_api', '0099_apidetails_request_type_apisource_auth_token_key'), ('dataset_api', '0100_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0101_datarequest_temp_id_alter_datarequest_id'), ('dataset_api', '0102_remove_datarequest_id_alter_datarequest_temp_id'), ('dataset_api', '0103_rename_temp_id_datarequest_id'), ('dataset_api', '0104_alter_datarequestparameter_data_request'), ('dataset_api', '0105_alter_datarequestparameter_data_request'), ('dataset_api', '0106_alter_resourceschema_unique_together_and_more'), ('dataset_api', '0107_apidetails_default_format_apidetails_format_loc_and_more'), ('dataset_api', '0108_apidetails_format_key'), ('dataset_api', '0109_alter_datarequest_file_and_more'), ('dataset_api', '0110_alter_apidetails_default_format_and_more'), ('dataset_api', '0111_alter_apisource_auth_token_alter_datarequest_file_and_more'), ('dataset_api', '0112_alter_dataaccessmodel_subscription_quota_and_more'), ('dataset_api', '0113_alter_resourceschema_display_name_and_more'), ('dataset_api', '0114_alter_datarequest_file_and_more'), ('dataset_api', '0115_dataset_parent_alter_datarequest_file_and_more'), ('dataset_api', '0116_datasetaccessmodel_title'), ('dataset_api', '0117_alter_apisource_auth_credentials_and_more'), ('dataset_api', '0118_filedetails_source_file_name'), ('dataset_api', '0119_resourceschema_parent_path_resourceschema_path_and_more'), ('dataset_api', '0120_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0121_alter_apiparameter_type_alter_datarequest_file_and_more'), ('dataset_api', '0122_alter_datarequest_file_alter_filedetails_file'), ('dataset_api', '0123_dataset_source_alter_datarequest_file_and_more'), ('dataset_api', '0124_datasetreviewrequest_parent_alter_datarequest_file_and_more'), ('dataset_api', '0125_dataset_last_updated_dataset_published_date_and_more'), ('dataset_api', '0126_datasetaccessmodel_sample_enabled_and_more'), ('dataset_api', '0127_remove_datasetaccessmodel_sample_enabled_and_more'), ('dataset_api', '0128_datasetaccessmodelresource_parameters'), ('dataset_api', '0129_geography_official_id_resourceschema_filterable_and_more'), ('dataset_api', '0130_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0131_alter_additionalinfo_format_and_more'), ('dataset_api', '0132_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0133_dataaccessmodel_is_global_and_more'), ('dataset_api', '0134_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0135_dataset_hvd_rating_alter_datarequest_file_and_more'), ('dataset_api', '0136_organizationcreaterequest_dpa_email_and_more'), ('dataset_api', '0137_organization_parent_alter_datarequest_file_and_more'), ('dataset_api', '0138_alter_datarequest_file_alter_dataset_hvd_rating_and_more'), ('dataset_api', '0139_organizationrequest_user_email_and_more'), ('dataset_api', '0140_alter_datarequest_file_alter_dataset_hvd_rating_and_more'), ('dataset_api', '0141_organizationcreaterequest_address_and_more'), ('dataset_api', '0142_alter_datarequest_file_alter_filedetails_file_and_more'), ('dataset_api', '0143_alter_datarequest_file_alter_filedetails_file'), ('dataset_api', '0144_geography_geo_type_and_more'), ('dataset_api', '0145_organizationcreaterequest_cdo_notification'), ('dataset_api', '0146_alter_geography_geo_type_and_more'), ('dataset_api', '0147_policy'), ('dataset_api', '0148_alter_policy_status'), ('dataset_api', '0149_remove_policy_data_access_model_and_more'), ('dataset_api', '0150_remove_dataaccessmodel_policy_and_more'), ('dataset_api', '0151_organizationcreaterequest_dpa_designation_and_more'), ('dataset_api', '0152_organizationcreaterequest_ogd_tid'), ('dataset_api', '0153_sector_parent_id_alter_datarequest_file_and_more'), ('dataset_api', '0154_geography_parent_id_alter_datarequest_file_and_more'), ('dataset_api', '0155_dataset_version_name_alter'), ('dataset_api', '0156_license_short_name_alter_licenseaddition'), ('dataset_api', '0157_datasetaccessmodel_payment_and_payment_type'), ('dataset_api', '0158_filedetails_supported_formats_alter_datarequest_file_and_more'), ('dataset_api', '0159_datasetaccessmodelrequest_token_time_and_more'), ('dataset_api', '0160_alter_datasetaccessmodelrequest_token_time_and_more'), ('dataset_api', '0161_alter_datasetaccessmodelrequest_token_time_and_more'), ('dataset_api', '0162_alter_datasetaccessmodelrequest_token_time'), ('dataset_api', '0163_alter_datasetaccessmodelrequest_token_time_and_more'), ('dataset_api', '0164_alter_datasetaccessmodelrequest_token_time'), ('dataset_api', '0165_resource_external_url_alter_dataset_dataset_type_and_more'), ('dataset_api', '0166_alter_dataset_dataset_type_and_more'), ('dataset_api', '0167_additionalinfo_license_title_and_more'), ('dataset_api', '0168_alter_datasetaccessmodelrequest_token_time_and_more'), ('dataset_api', '0169_license_dataset_type_policy_dataset_type_and_more'), ('dataset_api', '0170_rename_dataset_type_license_type_and_more'), ('dataset_api', '0171_alter_additionalinfo_file_and_more'), ('dataset_api', '0172_dataset_is_datedynamic_and_more'), ('dataset_api', '0173_resource_is_downloadable_and_more'), ('dataset_api', '0174_alter_dataset_description_and_more'), ('dataset_api', '0175_datasetaccessmodel_description_and_more'), ('dataset_api', '0176_apiparameter_options_alter_apiparameter_type_and_more'), ('dataset_api', '0177_apiparameter_download_options_resource_is_large_data_and_more'), ('dataset_api', '0178_apidetails_download_formats_and_more'), ('dataset_api', '0179_apidetails_is_large_dataset_and_more'), ('dataset_api', '0180_alter_apidetails_response_type_and_more')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('homepage', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=dataset_api.file_paths._organization_directory_path)),
                ('organization_types', models.CharField(choices=[('STATE GOVERNMENT', 'State Government'), ('UNION TERRITORY GOVERNMENT', 'Union Territory Government'), ('URBAN LOCAL BODY', 'Urban Local Body'), ('ACADEMIC INSTITUTION', 'Academic Institution'), ('CENTRAL GOVERNMENT', 'Central Government'), ('CITIZENS GROUP', 'Citizens Group'), ('CIVIL SOCIETY ORGANISATION', 'Civil Society Organisation'), ('INDUSTRY BODY', 'Industry Body'), ('MEDIA ORGANISATION', 'Media Organisation'), ('OPEN DATA/TECHNOLOGY COMMUNITY', 'Open Data Technology Community'), ('PRIVATE COMPANY', 'Private Company'), ('PUBLIC SECTOR COMPANY', 'Public Sector Company'), ('OTHERS', 'Others'), ('STARTUP', 'Startup'), ('GOVERNMENT', 'Government'), ('CORPORATIONS', 'Corporations'), ('NGO', 'Ngo')], max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_field', to='dataset_api.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Catalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('License', models.CharField(default='not_specified', max_length=100)),
                ('issued', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('sector', models.CharField(default='Other', max_length=50)),
                ('catalog', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='dataset_api.catalog')),
                ('access_type', models.CharField(default='open', max_length=50)),
                ('action', models.CharField(default='create data', max_length=50)),
                ('funnel', models.CharField(default='upload', max_length=50)),
                ('remote_issued', models.DateTimeField(blank=True, null=True)),
                ('remote_modified', models.DateTimeField(blank=True, null=True)),
                ('remark', models.CharField(default='Please follow creation instructions', max_length=200)),
                ('status', models.CharField(default='Draft', max_length=50)),
                ('tags', models.ManyToManyField(blank=True, null=True, to='dataset_api.tag')),
                ('period_from', models.DateField(blank=True, null=True)),
                ('period_to', models.DateField(blank=True, null=True)),
                ('update_frequency', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=1500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('status', models.CharField(default='Draft', max_length=50)),
                ('masked_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=10), blank=True, null=True, size=None)),
                ('byte_size', models.FloatField(blank=True, null=True)),
                ('checksum', models.CharField(blank=True, max_length=100, null=True)),
                ('compression_format', models.CharField(blank=True, max_length=100, null=True)),
                ('media_type', models.CharField(blank=True, max_length=100, null=True)),
                ('packaging_format', models.CharField(blank=True, max_length=100, null=True)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('is_downloadable', models.BooleanField(default=True)),
                ('is_large_data', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True)),
                ('official_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('geo_type', models.CharField(choices=[('DISTRICT', 'District'), ('STATE', 'State'), ('COUNTRY', 'Country'), ('UT', 'Ut')], max_length=20)),
                ('parent_id', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.geography')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='geography',
            field=models.ManyToManyField(blank=True, to='dataset_api.geography'),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='tags',
            field=models.ManyToManyField(blank=True, to='dataset_api.tag'),
        ),
        migrations.CreateModel(
            name='APISource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('base_url', models.URLField()),
                ('description', models.CharField(max_length=500)),
                ('api_version', models.CharField(max_length=50, null=True)),
                ('headers', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, null=True, size=None)),
                ('auth_loc', models.CharField(max_length=50, null=True)),
                ('auth_type', models.CharField(max_length=50)),
                ('auth_credentials', encrypted_json_fields.fields.EncryptedJSONField(blank=True, null=True)),
                ('auth_token', encrypted_json_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('organization', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
                ('auth_token_key', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(max_length=1500)),
                ('highlights', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, null=True, size=None)),
                ('official_id', models.CharField(default='', max_length=100, null=True)),
                ('parent_id', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.sector')),
            ],
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='sector',
        ),
        migrations.AddField(
            model_name='dataset',
            name='sector',
            field=models.ManyToManyField(blank=True, to='dataset_api.sector'),
        ),
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('remote_url', models.URLField(blank=True)),
                ('format', models.CharField(blank=True, max_length=15, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('file', models.FileField(blank=True, max_length=1000, upload_to=dataset_api.file_paths._info_directory_path)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('license_title', models.CharField(blank=True, help_text='For EXTERNAL datasets', max_length=100, null=True)),
                ('license_url', models.URLField(blank=True, help_text='For EXTERNAL datasets', null=True)),
                ('policy_title', models.CharField(blank=True, help_text='For EXTERNAL datasets', max_length=100, null=True)),
                ('policy_url', models.URLField(blank=True, help_text='For EXTERNAL datasets', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceSchema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=200)),
                ('format', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataset_api.resource')),
                ('array_field', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='array_item', to='dataset_api.resourceschema')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_field', to='dataset_api.resourceschema')),
                ('display_name', models.CharField(max_length=200)),
                ('parent_path', models.CharField(blank=True, max_length=200, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('filterable', models.BooleanField(default=True)),
            ],
            options={
                'unique_together': set(),
            },
        ),
        migrations.AddField(
            model_name='dataset',
            name='dataset_type',
            field=models.CharField(choices=[('API', 'Api'), ('FILE', 'File'), ('EXTERNAL', 'External')], default='FILE', max_length=50),
        ),
        migrations.CreateModel(
            name='APIDetails',
            fields=[
                ('resource', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dataset_api.resource')),
                ('auth_required', models.BooleanField()),
                ('response_type', models.CharField(blank=True, max_length=20, null=True)),
                ('api_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.apisource')),
                ('url_path', models.URLField(default='')),
                ('request_type', models.CharField(default='GET', max_length=20)),
                ('default_format', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('format_loc', models.CharField(blank=True, choices=[('HEADER', 'Header'), ('PARAM', 'Param')], default='PARAM', max_length=50, null=True)),
                ('supported_formats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), blank=True, null=True, size=None)),
                ('format_key', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('download_formats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), blank=True, null=True, size=None)),
                ('download_same_as_api', models.BooleanField(default=True)),
                ('is_large_dataset', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataAccessModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('type', models.CharField(default='OPEN', max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('contract_url', models.URLField(blank=True, null=True)),
                ('contract', models.FileField(blank=True, upload_to=dataset_api.file_paths._contract_directory_path)),
                ('license', models.CharField(default='not_specified', max_length=100)),
                ('quota_limit', models.IntegerField()),
                ('quota_limit_unit', models.CharField(max_length=100)),
                ('rate_limit', models.IntegerField()),
                ('rate_limit_unit', models.CharField(max_length=100)),
                ('organization', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
            ],
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='License',
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='access_type',
        ),
        migrations.CreateModel(
            name='DatasetAccessModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_access_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataaccessmodel')),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('issued', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.AlterField(
            model_name='dataset',
            name='remote_issued',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100000)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('remote_url', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, upload_to=dataset_api.file_paths._license_directory_path)),
                ('created_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], default='CREATED', max_length=50)),
                ('reject_reason', models.CharField(blank=True, max_length=500)),
                ('short_name', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LicenseAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('generic_item', models.BooleanField(default=False)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.license')),
                ('reject_reason', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], default='PUBLISHED', max_length=50)),
            ],
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='license',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.license'),
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='license_additions',
            field=models.ManyToManyField(blank=True, to='dataset_api.licenseaddition'),
        ),
        migrations.RemoveField(
            model_name='dataaccessmodel',
            name='contract_url',
        ),
        migrations.RenameField(
            model_name='dataaccessmodel',
            old_name='quota_limit',
            new_name='subscription_quota',
        ),
        migrations.RemoveField(
            model_name='dataaccessmodel',
            name='quota_limit_unit',
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='rate_limit',
            field=models.IntegerField(blank=True),
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='rate_limit_unit',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.RemoveField(
            model_name='dataset',
            name='remark',
        ),
        migrations.CreateModel(
            name='DatasetAccessModelRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('purpose', models.CharField(default='', max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('access_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.datasetaccessmodelmap')),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('token_time', models.DateTimeField(default=datetime.datetime(2023, 5, 18, 11, 37, 26, 757200))),
            ],
        ),
        migrations.CreateModel(
            name='DatasetRatings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.CharField(max_length=500)),
                ('data_quality', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('status', models.CharField(choices=[('CREATED', 'Created'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], max_length=50)),
                ('user', models.CharField(default='abhinav', max_length=50)),
                ('issued', models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='highlights',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, null=True, size=None),
        ),
        migrations.AddField(
            model_name='dataset',
            name='download_count',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('ACCEPTED', 'Accepted'), ('REJECTED', 'Rejected')], max_length=15)),
                ('accepted_agreement', models.FileField(blank=True, null=True, upload_to=dataset_api.file_paths._agreement_directory_path)),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('dataset_access_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agreements', to='dataset_api.datasetaccessmodel')),
                ('dataset_access_model_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.datasetaccessmodelrequest')),
                ('user_email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.AlterField(
            model_name='dataset',
            name='remote_modified',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='status',
            field=models.CharField(choices=[('ACTIVE', 'Active'), ('DISABLED', 'Disabled')], default='ACTIVE', max_length=50),
        ),
        migrations.CreateModel(
            name='DataRequest',
            fields=[
                ('status', models.CharField(max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to=dataset_api.file_paths._data_request_directory_path)),
                ('creation_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('reject_reason', models.CharField(blank=True, max_length=500)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('dataset_access_model_request', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataaccessmodelrequest')),
                ('resource', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.resource')),
                ('default', models.BooleanField(db_index=True, default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='contract',
            field=models.FileField(blank=True, max_length=300, upload_to=dataset_api.file_paths._contract_directory_path),
        ),
        migrations.AddField(
            model_name='dataset',
            name='confirms_to',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='contact_point',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='in_series',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='language',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='qualified_attribution',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='spatial_coverage',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='spatial_resolution',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='temporal_coverage',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='temporal_resolution',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='theme',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='accepted_agreement',
            field=models.FileField(blank=True, null=True, upload_to=dataset_api.file_paths._provider_agreement_directory_path),
        ),
        migrations.CreateModel(
            name='APIParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('format', models.CharField(max_length=100)),
                ('default', models.CharField(default='', max_length=500)),
                ('api_details', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dataset_api.apidetails')),
                ('description', models.CharField(default='', max_length=500)),
                ('type', models.CharField(choices=[('EXPOSED', 'Exposed'), ('PAGINATION', 'Pagination'), ('PREVIEW', 'Preview'), ('DOWNLOAD', 'Download')], max_length=50)),
                ('options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=100), blank=True, null=True, size=None)),
                ('download_options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(default='', max_length=100), blank=True, null=True, size=None)),
                ('download_api_options_same', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Subscribe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=100)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
            ],
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='subscription_quota',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='subscription_quota_unit',
            field=models.CharField(blank=True, choices=[('LIMITEDDOWNLOAD', 'Limiteddownload'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('QUARTERLY', 'Quarterly'), ('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly')], max_length=50, null=True),
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='validation',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='validation_unit',
            field=models.CharField(blank=True, choices=[('LIFETIME', 'Lifetime'), ('DAY', 'Day'), ('WEEK', 'Week'), ('MONTH', 'Month'), ('YEAR', 'Year')], max_length=50, null=True),
        ),
        migrations.CreateModel(
            name='DataRequestParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('api_parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.apiparameter')),
                ('data_request', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='datarequestparameters', to='dataset_api.datarequest')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_field', to='dataset_api.dataset'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='source',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.CreateModel(
            name='DatasetReviewRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=500)),
                ('remark', models.CharField(blank=True, max_length=500)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('reject_reason', models.CharField(blank=True, max_length=500)),
                ('user', models.CharField(max_length=50)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('request_type', models.CharField(choices=[('REVIEW', 'Review'), ('MODERATION', 'Moderation')], default='REVIEW', max_length=50)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parent_field', to='dataset_api.datasetreviewrequest')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='last_updated',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='dataset',
            name='published_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='DatasetAccessModelResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_access_model', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='dataset_api.datasetaccessmodelmap')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.resource')),
                ('fields', models.ManyToManyField(to='dataset_api.resourceschema')),
                ('sample_enabled', models.BooleanField(default=False)),
                ('sample_rows', models.IntegerField(default=5)),
                ('parameters', django.contrib.postgres.fields.ArrayField(base_field=models.JSONField(blank=True, null=True), blank=True, null=True, size=None)),
            ],
        ),
        migrations.AddField(
            model_name='dataaccessmodel',
            name='is_global',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='organization',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='hvd_rating',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=4),
        ),
        migrations.CreateModel(
            name='OrganizationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=500)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.CharField(blank=True, max_length=50, null=True)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('DELETED', 'Deleted')], max_length=20)),
                ('user_email', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100000)),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('remote_url', models.URLField(blank=True)),
                ('file', models.FileField(blank=True, upload_to=dataset_api.file_paths._policy_directory_path)),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('REJECTED', 'Rejected'), ('PUBLISHED', 'Published')], max_length=50)),
                ('reject_reason', models.CharField(blank=True, max_length=500)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.organization')),
                ('type', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='datasetaccessmodel',
            name='policy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.policy'),
        ),
        migrations.CreateModel(
            name='OrganizationCreateRequest',
            fields=[
                ('organization_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dataset_api.organization')),
                ('data_description', models.CharField(blank=True, max_length=500, null=True)),
                ('upload_sample_data_file', models.FileField(blank=True, upload_to=dataset_api.file_paths._organization_file_directory_path)),
                ('sample_data_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('REQUESTED', 'Requested'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected'), ('DELETED', 'Deleted')], max_length=20)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('username', models.CharField(default='', max_length=200)),
                ('dpa_email', models.EmailField(blank=True, default='', max_length=100, null=True)),
                ('address', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('organization_subtypes', models.CharField(blank=True, choices=[('MINISTRY', 'Ministry'), ('DEPARTMENT', 'Department'), ('ORGANISATION', 'Organisation'), ('OTHER', 'Other')], default='', max_length=20, null=True)),
                ('state', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='dataset_api.geography')),
                ('cdo_notification', models.FileField(blank=True, upload_to=dataset_api.file_paths._cdo_notification_directory_path)),
                ('dpa_designation', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('dpa_name', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('dpa_phone', models.CharField(blank=True, default='', max_length=15, null=True)),
                ('ogd_tid', models.IntegerField(blank=True, null=True)),
            ],
            bases=('dataset_api.organization',),
        ),
        migrations.AddField(
            model_name='dataset',
            name='version_name',
            field=models.CharField(blank=True, default='Original', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='datasetaccessmodel',
            name='payment',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='datasetaccessmodel',
            name='payment_type',
            field=models.CharField(choices=[('FREE', 'Free'), ('PAID', 'Paid')], default='FREE', max_length=50),
        ),
        migrations.CreateModel(
            name='FileDetails',
            fields=[
                ('resource', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dataset_api.resource')),
                ('format', models.CharField(max_length=50)),
                ('file', models.FileField(blank=True, max_length=1000, upload_to=dataset_api.file_paths._resource_directory_path)),
                ('remote_url', models.URLField(blank=True)),
                ('source_file_name', models.CharField(default='', max_length=100)),
                ('supported_formats', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), blank=True, null=True, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='OrgDpaHistory',
            fields=[
                ('organizationcreaterequest_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='dataset_api.organizationcreaterequest')),
                ('old_dpa', models.CharField(blank=True, max_length=100, null=True)),
                ('new_dpa', models.CharField(max_length=100)),
                ('new_cdo_notification', models.FileField(blank=True, upload_to=dataset_api.file_paths._cdo_notification_hist_directory_path)),
                ('org_id', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.PROTECT, to='dataset_api.organization')),
            ],
            bases=('dataset_api.organizationcreaterequest',),
        ),
        migrations.CreateModel(
            name='ExternalAccessModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.dataset')),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dataset_api.license')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dataset_api.policy')),
            ],
        ),
        migrations.AddField(
            model_name='dataset',
            name='is_datedynamic',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='dataset',
            name='description',
            field=models.CharField(blank=True, max_length=1500),
        ),
        migrations.AddField(
            model_name='datasetaccessmodel',
            name='description',
            field=models.CharField(default='', max_length=1500),
        ),
        migrations.AlterField(
            model_name='dataaccessmodel',
            name='description',
            field=models.CharField(max_length=1500),
        ),
    ]
